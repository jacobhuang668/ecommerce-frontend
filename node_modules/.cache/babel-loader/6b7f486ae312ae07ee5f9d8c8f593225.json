{"ast":null,"code":"import{PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL,PRODUCT_SAVE_REQUEST,PRODUCT_SAVE_SUCCESS,PRODUCT_SAVE_FAIL,PRODUCT_DELETE_SUCCESS,PRODUCT_DELETE_FAIL,PRODUCT_DELETE_REQUEST,PRODUCT_REVIEW_SAVE_REQUEST,PRODUCT_REVIEW_SAVE_FAIL,PRODUCT_REVIEW_SAVE_SUCCESS}from\"../constants/productConstants\";import Axios from\"axios\";//如果没有Axios调用外部api的话，Redux 的 dispatch 会在一个事件循环中收集所有动作（action），然后一次性调用 Reducer 更新状态，而不是立即触发多次渲染。\n//只有引入异步操作（如 axios.get 或 setTimeout），状态更新会被分隔在不同事件循环\nconst listProducts=function(){let category=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";let searchKeyword=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"\";let sortOrder=arguments.length>2&&arguments[2]!==undefined?arguments[2]:\"\";return async dispatch=>{try{dispatch({type:PRODUCT_LIST_REQUEST});//mock调用后台api\n// await new Promise((resolve) => setTimeout(resolve, 1000));\n// const { data } = { data: { products: [\"1\", \"2\"] } };\nconst{data,headers}=await Axios.get(\"localhost:8080/api/products?category=\"+category+\"&searchKeyword=\"+searchKeyword+\"&sortOrder=\"+sortOrder);console.log(\"data:\",data,\"headers:\",headers);dispatch({type:PRODUCT_LIST_SUCCESS,payload:data});}catch(error){dispatch({type:PRODUCT_LIST_FAIL,payload:error.message});}};};export{listProducts};","map":{"version":3,"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_SAVE_REQUEST","PRODUCT_SAVE_SUCCESS","PRODUCT_SAVE_FAIL","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_REVIEW_SAVE_REQUEST","PRODUCT_REVIEW_SAVE_FAIL","PRODUCT_REVIEW_SAVE_SUCCESS","Axios","listProducts","category","arguments","length","undefined","searchKeyword","sortOrder","dispatch","type","data","headers","get","console","log","payload","error","message"],"sources":["/Users/huanghuangjian/Documents/frontend-learning/react/ecommerce-frontend/src/actions/productActions.js"],"sourcesContent":["import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_SAVE_REQUEST,\n  PRODUCT_SAVE_SUCCESS,\n  PRODUCT_SAVE_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_REVIEW_SAVE_REQUEST,\n  PRODUCT_REVIEW_SAVE_FAIL,\n  PRODUCT_REVIEW_SAVE_SUCCESS,\n} from \"../constants/productConstants\";\nimport Axios from \"axios\";\n//如果没有Axios调用外部api的话，Redux 的 dispatch 会在一个事件循环中收集所有动作（action），然后一次性调用 Reducer 更新状态，而不是立即触发多次渲染。\n//只有引入异步操作（如 axios.get 或 setTimeout），状态更新会被分隔在不同事件循环\nconst listProducts =\n  (category = \"\", searchKeyword = \"\", sortOrder = \"\") =>\n  async (dispatch) => {\n    try {\n      dispatch({ type: PRODUCT_LIST_REQUEST });\n      //mock调用后台api\n      // await new Promise((resolve) => setTimeout(resolve, 1000));\n      // const { data } = { data: { products: [\"1\", \"2\"] } };\n      const { data, headers } = await Axios.get(\n        \"localhost:8080/api/products?category=\" +\n          category +\n          \"&searchKeyword=\" +\n          searchKeyword +\n          \"&sortOrder=\" +\n          sortOrder\n      );\n      console.log(\"data:\", data, \"headers:\", headers);\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n  };\nexport { listProducts };\n"],"mappings":"AAAA,OACEA,oBAAoB,CACpBC,oBAAoB,CACpBC,iBAAiB,CACjBC,uBAAuB,CACvBC,uBAAuB,CACvBC,oBAAoB,CACpBC,oBAAoB,CACpBC,oBAAoB,CACpBC,iBAAiB,CACjBC,sBAAsB,CACtBC,mBAAmB,CACnBC,sBAAsB,CACtBC,2BAA2B,CAC3BC,wBAAwB,CACxBC,2BAA2B,KACtB,+BAA+B,CACtC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB;AACA;AACA,KAAM,CAAAC,YAAY,CAChB,QAAAA,CAAA,KAAC,CAAAC,QAAQ,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAG,aAAa,CAAAH,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,IAAE,CAAAI,SAAS,CAAAJ,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,OAClD,MAAO,CAAAK,QAAQ,EAAK,CAClB,GAAI,CACFA,QAAQ,CAAC,CAAEC,IAAI,CAAExB,oBAAqB,CAAC,CAAC,CACxC;AACA;AACA;AACA,KAAM,CAAEyB,IAAI,CAAEC,OAAQ,CAAC,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CACvC,uCAAuC,CACrCV,QAAQ,CACR,iBAAiB,CACjBI,aAAa,CACb,aAAa,CACbC,SACJ,CAAC,CACDM,OAAO,CAACC,GAAG,CAAC,OAAO,CAAEJ,IAAI,CAAE,UAAU,CAAEC,OAAO,CAAC,CAC/CH,QAAQ,CAAC,CAAEC,IAAI,CAAEvB,oBAAoB,CAAE6B,OAAO,CAAEL,IAAK,CAAC,CAAC,CACzD,CAAE,MAAOM,KAAK,CAAE,CACdR,QAAQ,CAAC,CAAEC,IAAI,CAAEtB,iBAAiB,CAAE4B,OAAO,CAAEC,KAAK,CAACC,OAAQ,CAAC,CAAC,CAC/D,CACF,CAAC,GACH,OAAShB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}