html{
     /*font-size: 62.5%; 16px * 62.5 = 10px = 1rem 。将 html 的字体大小设置为 10px */
    font-size: 10px; /* 1rem = 10px */
}
*{
    box-sizing: border-box;
    list-style-type: none;
}
body{
    font: 1.6rem Helvetica;
    margin: 0;
    height: 100vh;
}
button{
    font-size: 1.6rem;
}
.grid-container{
    display: grid;
    grid-template-areas: 'header' 'middle' 'footer';
    /*1fr 表示一个等分单元（fraction unit），意思是网格只有一列，宽度会根据可用空间平均分配（这里是100%宽度，因为只有一个列）。*/
    grid-template-columns: 1fr;
    /*高度为 1fr，表示剩余可用空间的等分*/
    /*网格的高度会被分为固定的头部和底部（各5rem），以及一个可伸缩的主要内容区域（占据剩余空间）。*/
    grid-template-rows: 5rem 1fr 5rem;

}
a{
    text-decoration: none;
}
.header{
    grid-area: 'header';
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    background-color: #203040;
    align-items: center;
    padding: 0.5rem;

}
.brand{
    display: flex;
    align-items: center;
    gap: 1rem;
}
.brand a{
    color: #ffffff;
    font-size: 3rem;
    font-weight: bold;
}
.brand a:hover{
    color: #ff8000;
}
.brand button{
    background:none;
    border: none;
    color: #ffffff;
    cursor: pointer;
    padding: 0.5rem;/*有问题*/
    font-size: 3rem;
}
.header-links{
    display: flex;
    flex-direction: row;
    gap: 1.5rem;
}
.header-links a{
    color: #ffffff;
    font-size: 1.5rem;
    font-weight: bold;
}
.header-links a:hover{
    color: #ff8000;

}
.middle{
    grid-area: 'middle';

}

.footer{
    grid-area: 'footer';
}
.filter{
    display: flex;
    list-style-type: none;
    justify-content: center;
    padding: 0;
    gap: 1rem;

}
.filter input,
.filter button,
.filter select{
    padding: 0.5rem;
    border-radius: 0.5rem;
    border: 0.1rem #c0c0c0 solid;
    font-size: 1.6rem;
}

/*HomeScreen*/
.products {
   display: flex;
   justify-content: flex-start;
   flex-wrap: wrap;
}
.products li{
    padding: 0;
    margin: 1rem;
    height: 50rem;
      /*
        flex 是以下三个属性的缩写：
            flex-grow：弹性增长系数（子元素如何分配多余空间）。
            flex-shrink：弹性收缩系数（子元素如何在空间不足时缩小）。
            flex-basis：弹性基础尺寸（子元素的初始大小）。

        flex: 0 1 30rem; 的效果：
            这个元素的基础宽度是 34rem。
            如果容器有剩余空间（大于所有子元素的 flex-basis 总和），它不会增长（flex-grow: 0）。
            如果容器空间不足（小于所有子元素的 flex-basis 总和），它可以按比例缩小（flex-shrink: 1）。
        直观解释：
        这个元素固定在 30rem，除非空间不够，它才会缩小，但绝不会因为有多余空间而变大。
  */
    flex:0 1 30rem;
    border-bottom: 0.1rem #c0c0c0 solid;
}
.product{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    height: 100%;
}
.product-image{
    max-width: 30rem;
    max-height: 30rem;
}
.product-name{
    font-weight: bold;
    font-size: 2rem;
}
.product-price {
    font-size: 2rem;
    font-weight: bold;
}

.form{
    display: flex;
    justify-content: center;
    align-items: center;
    border: 0.1rem solid blue;
    height: 100vh;
}
.form-container{
    display: flex;
    flex-direction: column;
    width: 32rem;
    border: 0.1rem #c0c0c0 solid;
    border-radius: 0.5rem;
    padding: 1rem;
   

}
.form-container li{
    display: flex;
    flex-direction: column;
    margin-bottom: 1rem;
    margin-top: 1rem;

}
.form-container li input{
    padding: 0.5rem;
    border-radius: 0.5rem;
    outline: 0;  
    border: 0.1rem #c0c0c0 solid;

}
.button.primary{
    background-color: #f0c040;

}
.button{
    padding: 1rem;
    border: 0.1rem #808080 solid;
    border-radius: 0.5rem;
    cursor: pointer;
   
}
.button:active{
    transform: scale(0.98);
}

button{
    font-size: 1.6rem;
}
.button:hover {
    border: 0.1rem #404040 solid;
}
.button.secondary {
    background-color: #f0f0f0;
}
.text-center{
    text-align: center;
}
.button.secondary.text-center:hover{
    color: red;
}

.profile{
    display: flex;
}
.profile-info{
    flex: 0 1 30rem;
}






























/*如果 iPhone SE 屏幕太小，布局需要调整，可以使用 媒体查询：*/

/* @media (max-width: 375px)and (max-width: 390px) { /* iPhone SE 
    .filter {
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
}*/
@media (max-width: 390px) { /* iPhone SE */
    .filter {
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
}